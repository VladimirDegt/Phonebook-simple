{"version":3,"file":"static/js/54.128cfaac.chunk.js","mappings":"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","sources":["utils/display-flex.js","components/Contacts/Contacts.styled.jsx","utils/delete-icon.js","utils/change-svg.js","redux/contacts/selectors.js","components/ModalChange/ModalChange.styled.jsx","utils/close-svg.js","components/ModalChange/ModalChange.jsx","components/Contacts/Contacts.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/NewContactBtn/NewContactBtn.jsx","pages/Contacts.styled.jsx","pages/Contacts.jsx"],"sourcesContent":["import { css } from '@emotion/react';\n\nexport const displayFlex = css`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 0 auto;\n`;\n","import styled from '@emotion/styled';\nimport { displayFlex } from 'utils/display-flex';\n\nexport const StyledSection = styled.section`\n  ${displayFlex}\n  gap: 5px;\n`;\n\nexport const StyledContainerTable = styled.table`\n  display: flex;\n  flex-direction: column;\n  padding: 0;\n  margin: 10px auto;\n  border-collapse: collapse;\n\n  thead th {\n    text-align: center;\n  }\n\n  th,\n  td {\n    border: 1px solid #2e2f42;\n    padding: 8px;\n  }\n`;\n\nexport const StyledFirstRowHead = styled.th`\n  width: 300px;\n`;\nexport const StyledSecondRowHead = styled.th`\n  width: 200px;\n  @media (max-width: 1200px) {\n    display: none;\n  }\n`;\nexport const StyledThirdRowHead = styled.th`\n  width: 200px;\n  @media (max-width: 768px) {\n    display: none;\n  }\n`;\nexport const StyledFirstRow = styled.td`\n  width: 300px;\n  font-size: 16px;\n  weight: 500;\n  color: #0000ff;\n  cursor: pointer;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    color: #6699ff;\n  }\n`;\nexport const StyledSecondRow = styled.td`\n  width: 200px;\n  text-align: center;\n  @media (max-width: 1200px) {\n    display: none;\n  }\n`;\nexport const StyledThirdRow = styled.td`\n  width: 200px;\n  text-align: center;\n  @media (max-width: 768px) {\n    display: none;\n  }\n`;\nexport const StyledChangeBtn = styled.button`\n  border: none;\n  background-color: inherit;\n  cursor: pointer;\n`;\n","import * as React from \"react\";\n\nfunction IconDeleteBin5Fill(props) {\n  return (\n    <svg\n      viewBox=\"0 0 24 24\"\n      fill=\"#FF0000\"\n      height=\"25px\"\n      width=\"25px\"\n      {...props}\n    >\n      <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n      <path d=\"M4 8h16v13a1 1 0 01-1 1H5a1 1 0 01-1-1V8zm3-3V3a1 1 0 011-1h8a1 1 0 011 1v2h5v2H2V5h5zm2-1v1h6V4H9zm0 8v6h2v-6H9zm4 0v6h2v-6h-2z\" />\n    </svg>\n  );\n}\n\nexport default IconDeleteBin5Fill;","import * as React from \"react\";\n\nfunction IconWrite(props) {\n  return (\n    <svg\n      viewBox=\"0 -3 22 24\"\n      fill=\"#000000\"\n      height=\"30px\"\n      width=\"30px\"\n      {...props}\n    >\n      <g\n        fill=\"none\"\n        fillRule=\"evenodd\"\n        stroke=\"#00CC33\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      >\n        <path d=\"M17 4a2.121 2.121 0 010 3l-9.5 9.5-4 1 1-3.944 9.504-9.552a2.116 2.116 0 012.864-.125zM9.5 17.5h8M15.5 6.5l1 1\" />\n      </g>\n    </svg>\n  );\n}\n\nexport default IconWrite;","export const selectContactsState = state => state.contacts;\n\nexport const selectFilterState = state => state.filters;","import styled from \"@emotion/styled\";\nimport { displayFlex } from \"utils/display-flex\";\n\nexport const StyledBackdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(192, 188, 188, 0.507);\n`\nexport const StyledModal = styled.div`\n  position: absolute;\n  width: 311px;\n  min-height: 471px;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  border-radius: 15px;\n  background-color: #FCFCFC;\n\n  @media (min-width: 768px) {\n    width: 517px;\n  }\n`\nexport const StyledButtonClose = styled.button`\n  position: absolute;\n  padding: 0;\n  border: none;\n  top: 24px;\n  right: 24px;\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n  border-radius: 50%;\n  background-color: #FAFAFA;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    background-color: #3f51b5;\n\n  svg {\n    fill: #FAFAFA;\n    transition: 250ms cubic-bezier(0.4, 0, 0.2, 1); \n  }\n`\nexport const StyledTitleModal = styled.h2`\n  width: 100%;\n  height: 48px;\n  margin: 0;\n  text-align: center;\n  color: #111111;\n  font-weight: 600;\n  font-size: 20px;\n  line-height: 24px;\n\n  @media (min-width: 768px) {\n    font-size: 24px;\n  }\n`\nexport const StyledFormModal = styled.form`\n  ${displayFlex}\n  margin: 50px 24px 24px 24px;\n  padding: 0px;\n  gap: 14px;\n`\n\nexport const StyledInputModal = styled.input`\n  width: 100%;\n  min-height: 14px;\n  outline: none;\n  border: 1.5px solid rgba(17, 17, 17, 0.05);\n  padding: 14px 18px;\n  border-radius: 8px;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 17px;\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    border: 1.5px solid #3f51b5;\n  }\n\n  @media (min-width: 768px) {\n    font-weight: 500;\n    font-size: 16px;\n  }  \n`\nexport const StyledContainerInput = styled.div`\n  position: relative;\n  width: 301px;\n  display: flex;\n  align-items: flex-start;\n\n  input {\n    padding-left: 40px;\n  }\n\n  @media (min-width: 768px) {\n    width: 507px;\n  }\n`\n\nexport const StyledSvgInput = styled.span`\n  position: absolute;\n  display: inline-block;\n  top: 10px;\n  left: 8px;\n  font-size: 16px;\n  color: black;\n`\n\nexport const StyledTextArea = styled.textarea`\n  width: 280px;\n  resize: none;\n  overflow: auto;\n  outline: none;\n  border-radius: 8px;\n  padding-left: 18px;\n  padding-top: 14px;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 17px;\n  border: 1.5px solid rgba(17, 17, 17, 0.05);\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    border: 1.5px solid #3f51b5;\n  }\n\n  @media (min-width: 768px) {\n    width: 484px;\n    font-weight: 500;\n    font-size: 16px;\n  }  \n`\nexport const StyledButtonModal = styled.button`\n  padding: 8px;\n  border-radius: 8px;\n  background-color: #3f51b5;\n  text-align: center;\n  display: inline-block;\n  color: #FAFAFA;\n  border: 0;\n  outline: none;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  margin-left: 10px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n  0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n:hover,\n:focus {\n  background-color: #FAFAFA;\n  color: #3f51b5;\n`","import * as React from \"react\";\n\nfunction IconClose(props) {\n  return (\n    <svg\n      viewBox=\"0 0 512 512\"\n      fill=\"#111111\"\n      height=\"24px\"\n      width=\"24px\"\n      {...props}\n    >\n      <path d=\"M289.94 256l95-95A24 24 0 00351 127l-95 95-95-95a24 24 0 00-34 34l95 95-95 95a24 24 0 1034 34l95-95 95 95a24 24 0 0034-34z\" />\n    </svg>\n  );\n}\n\nexport default IconClose;","import { useEffect, useState } from 'react';\nimport {\n  StyledBackdrop,\n  StyledModal,\n  StyledButtonClose,\n  StyledTitleModal,\n  StyledFormModal,\n  StyledInputModal,\n  StyledButtonModal,\n} from './ModalChange.styled';\nimport IconClose from 'utils/close-svg';\nimport { Notify } from 'notiflix';\nimport { useDispatch } from 'react-redux';\nimport { updateContact } from 'redux/contacts/operations';\n\nexport function ModalChange(props) {\n  const dispatch = useDispatch();\n  const { modalClose } = props;\n  const [id] = useState(props.id);\n  const [name, setName] = useState(props.name);\n  const [number, setNumber] = useState(props.number);\n\n  useEffect(() => {\n    function handleEsc(e) {\n      if (e.code === 'Escape') {\n        modalClose();\n      }\n    }\n\n    document.addEventListener('keydown', handleEsc);\n    return () => {\n      document.removeEventListener('keydown', handleEsc);\n    };\n  }, [modalClose]);\n\n  function handleInputVisible({ target }) {\n    switch (target.name) {\n      case 'name':\n        setName(target.value);\n        break;\n      case 'number':\n        setNumber(target.value);\n        break;\n      default:\n        return;\n    }\n  }\n\n  function handleFormSubmit(e) {\n    e.preventDefault();\n    const form = e.target;\n\n    // dispatch(\n    //   updateContact({\n    //     email: form.elements.email.value,\n    //     password: form.elements.password.value,\n    //   })\n    // )\n        dispatch(updateContact(id))\n      .unwrap()\n      .then(() => {\n        Notify.success('Контакт оновлено!', {\n          position: 'center-top',\n          distance: '100px',\n        });\n      })\n      .catch(() => Notify.failure('Щось пішло не так'));\n    form.reset();\n    modalClose()\n  }\n\n\n  function handleClickBackdrop(e) {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    modalClose();\n  }\n\n  function handlerModalClose() {\n    modalClose();\n  }\n\n  return (\n    <StyledBackdrop onClick={handleClickBackdrop}>\n      <StyledModal>\n        <StyledButtonClose type=\"button\" onClick={handlerModalClose}>\n          <IconClose />\n        </StyledButtonClose>\n        <StyledFormModal onSubmit={handleFormSubmit}>\n          <StyledTitleModal>Інформація про контакт</StyledTitleModal>\n          <StyledInputModal\n            type=\"text\"\n            autoComplete=\"on\"\n            placeholder=\"Ім'я\"\n            name=\"name\"\n            required\n            onChange={handleInputVisible}\n            value={name}\n          />\n          <StyledInputModal\n            type=\"text\"\n            autoComplete=\"on\"\n            placeholder=\"Номер\"\n            name=\"number\"\n            onChange={handleInputVisible}\n            value={number}\n          />\n          <StyledButtonModal type=\"submit\">Підтвердити</StyledButtonModal>\n        </StyledFormModal>\n      </StyledModal>\n    </StyledBackdrop>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Table,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n  TableContainer,\n} from '@chakra-ui/react';\nimport {\n  StyledSection,\n  StyledChangeBtn,\n} from './Contacts.styled';\nimport IconDeleteBin5Fill from 'utils/delete-icon';\nimport IconWrite from 'utils/change-svg';\nimport { deleteContact, getContact } from 'redux/contacts/operations';\nimport {\n  selectContactsState,\n  selectFilterState,\n} from 'redux/contacts/selectors';\nimport { ModalChange } from 'components/ModalChange/ModalChange';\n\nfunction Contacts() {\n  const [isOpenModal, setIsOpenModal] = useState(false);\n  const [id, setId] = useState('');\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const { items, isLoading } = useSelector(selectContactsState);\n  const { filter } = useSelector(selectFilterState);\n\n  const visibaleContact =\n    filter === ''\n      ? items\n      : items.filter(item =>\n          item.name.toLowerCase().includes(filter.toLowerCase())\n        );\n\n  useEffect(() => {\n    dispatch(getContact());\n  }, [dispatch]);\n\n  const onDeleteContact = id => dispatch(deleteContact(id));\n\n  function handleModalOpen() {\n    setIsOpenModal(true);\n  }\n\n  function modalClose() {\n    setIsOpenModal(false);\n  }\n\n  const onChangeContact = (id, name, number) => {\n    setId(id);\n    setName(name);\n    setNumber(number);\n    handleModalOpen();\n  };\n\n  return (\n    <StyledSection>\n      {isLoading && <p>Loading contacts...</p>}\n      <TableContainer>\n        <Table variant=\"simple\">\n          <Thead>\n            <Tr>\n              <Th>Name</Th>\n              <Th>Phone</Th>\n            </Tr>\n          </Thead>\n          <Tbody>\n            {visibaleContact.map(item => (\n              <Tr key={item.id}>\n                <Td>{item.name}</Td>\n                <Td>{item.number}</Td>\n                <Td>\n                <StyledChangeBtn\n                  type=\"button\"\n                  onClick={() => onChangeContact(item.id, item.name, item.number)}\n                >\n                  <IconWrite />\n                </StyledChangeBtn>\n              </Td>\n              <Td>\n                <StyledChangeBtn\n                  type=\"button\"\n                  onClick={() => onDeleteContact(item.id)}\n                >\n                  <IconDeleteBin5Fill />\n                </StyledChangeBtn>\n              </Td>\n              </Tr>\n            ))}\n          </Tbody>\n        </Table>\n      </TableContainer>\n      {isOpenModal && (\n        <ModalChange\n          modalClose={modalClose}\n          id={id}\n          name={name}\n          number={number}\n        />\n      )}\n    </StyledSection>\n  );\n}\n\nexport default Contacts;\n","import styled from '@emotion/styled';\nimport { Form } from 'formik';\nimport { DebounceInput } from 'react-debounce-input';\nimport { displayFlex } from 'utils/display-flex';\n\nexport const StyledForm = styled(Form)`\n  ${displayFlex}\n  gap: 5px;\n  border: 1px solid grey;\n  border-radius: 4px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n`\nexport const StyledInput = styled(DebounceInput)`\n  padding: 8px;\n  border-radius: 4px;\n`","import { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { StyledForm, StyledInput } from './Filter.styled';\nimport { filterContact } from 'redux/contacts/filterReducer';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n\n  return (\n    <Formik initialValues={{ vidibleContacts: '' }}>\n      {({ values, setFieldValue }) => (\n        <StyledForm >\n          <label htmlFor=\"findcontact\">Find contacts by name</label>\n          <StyledInput\n            debounceTimeout={300}\n            id=\"findcontact\"\n            placeholder='Search...'\n            name=\"vidibleContacts\"\n            type=\"text\"\n            onChange={({ target }) => {\n              dispatch(filterContact(target.value));\n              setFieldValue('vidibleContacts', target.value);\n            }}\n            value={values.vidibleContacts}\n          />\n        </StyledForm>\n      )}\n    </Formik>\n  );\n}\n\nexport default Filter;\n","import { Formik, Field } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Box,\n  Button,\n  Flex,\n  FormControl,\n  FormErrorMessage,\n  FormLabel,\n  Input,\n  VStack,\n  useDisclosure,\n} from '@chakra-ui/react';\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  ModalCloseButton,\n} from '@chakra-ui/react';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContactsState } from 'redux/contacts/selectors';\n\nexport const NewContactBtn = () => {\n  const dispatch = useDispatch();\n  const { isLoading } = useSelector(selectContactsState);\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(\n      addContact({\n        name: values.name,\n        number: values.number,\n      })\n    );\n    resetForm();\n  };\n\n  const initialValues = {\n    name: '',\n    number: '',\n  };\n\n  return (\n    <>  \n      {isLoading && <p>Loading...</p>}\n      <Button colorScheme=\"blue\" onClick={onOpen}>\n        Create contact\n      </Button>\n\n      <Modal isOpen={isOpen} onClose={onClose} isCentered size='sm'>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Create new contact</ModalHeader>\n          <ModalCloseButton />\n\n          <ModalBody>\n            <Flex bg=\"gray.100\" align=\"center\" justify=\"center\" h=\"65vh\">\n              <Box bg=\"white\" p={8} rounded={4} w=\"50vh\">\n                <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n                  {({ handleSubmit, errors, touched }) => (\n                    <form onSubmit={handleSubmit}>\n                      <VStack spacing={4} align=\"flex-start\">\n                        <FormControl isInvalid={!!errors.name && touched.name}>\n                          <FormLabel htmlFor=\"name\">Name</FormLabel>\n                          <Field\n                            as={Input}\n                            id=\"name\"\n                            name=\"name\"\n                            type=\"name\"\n                            variant=\"filled\"\n                            validate={value => {\n                              let error;\n\n                              if (value.length < 4) {\n                                error =\n                                  'Name must contain at least 4 characters';\n                              }\n\n                              return error;\n                            }}\n                          />\n                        </FormControl>\n                        <FormControl\n                          isInvalid={!!errors.number && touched.number}\n                        >\n                          <FormLabel htmlFor=\"number\">Number</FormLabel>\n                          <Field\n                            as={Input}\n                            id=\"number\"\n                            name=\"number\"\n                            type=\"number\"\n                            variant=\"filled\"\n                            validate={value => {\n                              let error;\n\n                              if (value.length < 6) {\n                                error =\n                                  'Number must contain at least 6 characters';\n                              }\n\n                              return error;\n                            }}\n                          />\n                          <FormErrorMessage>{errors.password}</FormErrorMessage>\n                        </FormControl>\n                        <Button type=\"submit\" colorScheme=\"blue\" width=\"full\">\n                          Create\n                        </Button>\n                      </VStack>\n                    </form>\n                  )}\n                </Formik>\n              </Box>\n            </Flex>\n          </ModalBody>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\nimport { displayFlex } from 'utils/display-flex';\n\nexport const StyledSection = styled.section`\n  ${displayFlex}\n  gap: 20px;\n`;","import { Helmet } from 'react-helmet';\nimport Contacts from 'components/Contacts/Contacts';\nimport Filter from 'components/Filter/Filter';\nimport { NewContactBtn } from 'components/NewContactBtn/NewContactBtn';\nimport { StyledSection } from './Contacts.styled';\n\nexport default function ContactsPage() {\n  return (\n    <StyledSection>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n      <NewContactBtn/>\n      <Filter />\n      <Contacts />\n    </StyledSection>\n  );\n};\n"],"names":["displayFlex","css","StyledSection","styled","StyledChangeBtn","props","viewBox","fill","height","width","d","fillRule","stroke","strokeLinecap","strokeLinejoin","selectContactsState","state","contacts","selectFilterState","filters","StyledBackdrop","StyledModal","StyledButtonClose","StyledTitleModal","StyledFormModal","StyledInputModal","StyledButtonModal","ModalChange","dispatch","useDispatch","modalClose","useState","id","name","setName","number","setNumber","handleInputVisible","target","value","useEffect","handleEsc","e","code","document","addEventListener","removeEventListener","onClick","currentTarget","type","onSubmit","preventDefault","form","updateContact","unwrap","then","Notify","position","distance","catch","reset","autoComplete","placeholder","required","onChange","isOpenModal","setIsOpenModal","setId","useSelector","items","isLoading","filter","visibaleContact","item","toLowerCase","includes","getContact","onChangeContact","variant","Tr","Th","map","Td","deleteContact","onDeleteContact","StyledForm","Form","StyledInput","DebounceInput","initialValues","vidibleContacts","values","setFieldValue","htmlFor","debounceTimeout","filterContact","NewContactBtn","useDisclosure","isOpen","onOpen","onClose","colorScheme","isCentered","size","bg","align","justify","h","p","rounded","w","resetForm","addContact","handleSubmit","errors","touched","spacing","isInvalid","as","Input","validate","error","length","password","ContactsPage","Helmet"],"sourceRoot":""}